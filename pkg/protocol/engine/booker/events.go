package booker

import (
	"github.com/iotaledger/hive.go/runtime/event"
	"github.com/iotaledger/iota-core/pkg/protocol/engine/blocks"
	"github.com/iotaledger/iota-core/pkg/protocol/engine/mempool"
)

type Events struct {
	BlockBooked        *event.Event1[*blocks.Block]
	BlockInvalid       *event.Event2[*blocks.Block, error]
	TransactionInvalid *event.Event2[mempool.TransactionMetadata, error]

	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		BlockBooked:        event.New1[*blocks.Block](),
		BlockInvalid:       event.New2[*blocks.Block, error](),
		TransactionInvalid: event.New2[mempool.TransactionMetadata, error](),
	}
})
